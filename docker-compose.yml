version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_api
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    ports:
      - '3000:3000'
    depends_on:
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - ecommerce
    restart: always
    command: >
      bash -c "
      until nc -z postgres 5432; do
      echo '‚è≥ Aguardando o PostgreSQL iniciar...';
      sleep 2;
      done &&
      echo '‚úÖ PostgreSQL est√° pronto. Executando o SQL...' &&
      npm run sql &&
      echo 'üöÄ Iniciando o servidor...' &&
      npm run dev
      "


  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - ecommerce
    restart: always

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ecommerce
    restart: always

volumes:
  pgdata:

networks:
  ecommerce:
    driver: bridge
